{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red0\green0\blue0;\red0\green0\blue0;
\red202\green202\blue202;\red109\green109\blue109;\red70\green137\blue204;\red140\green211\blue254;\red194\green126\blue101;
\red167\green197\blue152;\red0\green0\blue255;\red255\green53\blue124;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\cssrgb\c0\c0\c0;\csgray\c0\c0;
\cssrgb\c83137\c83137\c83137;\cssrgb\c50196\c50196\c50196;\cssrgb\c33725\c61176\c83922;\cssrgb\c61176\c86275\c99608;\cssrgb\c80784\c56863\c47059;
\cssrgb\c70980\c80784\c65882;\csgenericrgb\c0\c0\c100000;\csgenericrgb\c100000\c20784\c48627;}
\margl1440\margr1440\vieww13040\viewh13700\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 Sohee Cho\
Week 2 HW\
Part 2\
\
\

\b 1. Take one of your forms and describe to me what your JavaScript code is doing and what\
each part is called. For instance, are you using a named function, anonymous arrow\
function, or regular anonymous function. Are you using a built-in property of\
Document? Etc. Then describe what these parts do in relation to the DOM (your html\
markup), and in relation to css selectors, if applicable. \cf2 Remember, there is a\
relationship between HTML, CSS, AND JavaScript. \cf0 Break it down, step by step.
\b0 \
\
HTML:\
\pard\pardeftab720\sl360\partightenfactor0
\cf3 \cb4 \expnd0\expndtw0\kerning0
        <div class="form">\
            <fieldset>\
                <label>Number 1:</label>\
                <input type="text" id="num1">\
            </fieldset>\
\
            <fieldset>\
                <label>Number 2:</label>\
                <input type="text" id="num2">\
            </fieldset>\
\
            <fieldset>\
                <button id="add" onclick="addNums()">Click to Add</button>\
                <h3>Result</h3>\
                <span id="result">Result here</span>\
            </fieldset>\
        </div>\cf5 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
JavaScript:\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf3 \cb4 \expnd0\expndtw0\kerning0
const addNums = () => \{ \
    let num1 = document.getElementById("num1").value;\
    let num2 = document.getElementById("num2").value;\
    let sum = parseInt(num1, 10) + parseInt(num2, 10);\
    document.getElementById("result").innerHTML = sum;\
\};\cf5 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\
This is my form for addition. In the JavaScript, I declare const which is \'93addNums\'94 and assign the anonymous arrow function. The variable inside the anonymous arrow function is declared as \'93let num1\'94 and is assigned \'93document.getElementById(\'93num1\'94). The \'93.value\'94 is a value attribute from the input tag, which is provided by the user in the input field. The \'93getElementById\'94 calls the element with that specific \'93id\'94 and in return, gives me the specified value from that \'93id\'94. The (\'93result\'94).innerHTML is the sum of the \'93addNums\'94 function. The keyword for this function in the JS is \'93addNums( )\'94\
\
\
\
2. 
\b var, let, const, and variable naming:\
Go into Mathias Byen's blog post entitled \cf11 Valid JavaScript variable names in ES2015\cf0 , and\
down to his variable name validator tool. Test 3 variable names you think up and check\
whether they are valid or not using the validator. Describe the 3 variable names that\
you checked in the variable name validator, whether they passed or not, and if not, why\
not.
\b0 \
\
Variable name: sohee\
It\'92s a valid variable name identifier because it starts with an alpha character.\
\
Variable name: $micah\
It\'92s a valid variable because it starts with a \'93$\'94\
\
Variable name: soh.cho\
It is an invalid identifier because it uses a \'93.\'94\
\
\
\
\pard\pardeftab720\partightenfactor0

\b \cf0 3. let, const and var:\
\'95 
\fs20 \cf12 Declare 
\fs24 \cf0 and 
\fs20 \cf12 initialize 
\fs24 \cf0 a variable with 
\fs20 \cf12 var
\fs24 \cf0 . Then re-assign the variable to\
another value.\
\'95 
\fs20 \cf12 Declare 
\fs24 \cf0 and 
\fs20 \cf12 initialize 
\fs24 \cf0 a variable with 
\fs20 \cf12 let
\fs24 \cf0 . Then re-assign the variable to\
another value.\
\'95 
\fs20 \cf12 Declare 
\fs24 \cf0 and 
\fs20 \cf12 initialize 
\fs24 \cf0 a variable with 
\fs20 \cf12 const
\fs24 \cf0 . Then re-assign the variable to\
another value.\
\'95 Describe each outcome, what they were and why. Copy and paste the results to the\
Developer Tools console into your .txt file to show the outcomes. Make sure to\
console.log() everything you want to have printed to the Developer Tools Console. You\
don\'92t actually need to code directly into the Console as we did in class. You can\
console.log() whatever it is that you need to have show up there, inside your JavaScript\
file. This will also help you to better describe the outcomes.
\b0 \
\
var x = 5\
\{var x = 1;\}\
x is 2\
\
- x declared in the block\
- is the same as the x declared from outside the block\
\
\
var x = 5;\
\{let x = 1;\}\
x is 5 \
\
- x declared in the block\
- it is not the same as the x declared from outside the block\
\
\
 var x = 5;\
\{const x = 1;\}\
\
- x declared in the block\
- it is not the same as the x declared from outside the block\
\
\

\b 4. global scope vs local scope:\
Describe what it means for a variable to have global scope, and what it means for a\
variable to have local scope. Give examples using let, const, and var. Remember, global\
scope and local scope differ for let, const, and var.
\b0 \
\
When a variable has a local scope, it means that it exists only within the block that it is declared in. Global scopes are available everywhere in the JavaScript code including functions. Any variable which is undeclared has a global scope and exists only once in a script. It is visible in every function.\
\
Example of Local Scope:\
\
function Cuny () \{\
var schoolName = \'93CityTech\'94;\
\} \
\
Example of Global Scope:\
\
var schoolName = \'93CityTech\'94; \
\
*/code here can use schoolName/*\
\
}